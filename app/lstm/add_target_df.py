from copy import deepcopy

def add_target_df(df, target=1):
    """
    Функция для добавления целевых переменных в DataFrame.

    Параметры:
    - df (pd.DataFrame): Исходный DataFrame с данными. Ожидается, что он содержит колонки 'Adj Close' и 'Open'.
    - target (int, по умолчанию 1): Количество дней для смещения целевой переменной. Определяет, насколько вперед будет смещена целевая переменная.

    Возвращаемые значения:
    - pd.DataFrame: Измененный DataFrame с добавленными целевыми переменными.

    Описание:
    1. Создается копия исходного DataFrame для предотвращения изменений в оригинальном объекте.
    2. Создаются следующие целевые переменные:
       - 'Target': Разность между значением 'Adj Close' и 'Open'. Значение смещается на 'target' дней вперед (положительное значение 'target' смещает данные на будущее, отрицательное - на прошлое).
       - 'TargetClass': Бинарная целевая переменная, где 1 указывает на положительное значение 'Target', а 0 - на отрицательное значение.
       - 'TargetNextClose': Значение 'Adj Close', смещенное на 'target' дней вперед. Это представляет собой ценовой уровень на 'target' дней вперед, используемый для прогнозирования будущих цен.

    Примечание:
    - 'Target' и 'TargetNextClose' могут содержать пропущенные значения (NaN), если смещение выходит за границы DataFrame.
    """

    # Создание копии исходного DataFrame, чтобы не изменять исходный объект
    data = deepcopy(df)
    
    # Создание целевых переменных:
    data['Target'] = data['Adj Close'] - data.Open  # Разность между 'Adj Close' и 'Open'
    data['Target'] = data['Target'].shift(-target)  # Смещение 'Target' на 'target' дней вперед
    
    # Создание бинарной целевой переменной
    data['TargetClass'] = [1 if data.Target[i] > 0 else 0 for i in range(len(data))]
    
    # Создание целевой переменной для следующей цены закрытия
    data['TargetNextClose'] = data['Adj Close'].shift(-target)  # Смещение 'Adj Close' на 'target' дней вперед

    return data